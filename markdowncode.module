<?php

/**
 * @file
 * Provides a Markdown-Github code blocks input filter.
 */

/**
 * Injects the filter into Drupal filters.
 * 
 * @implements hook_filter_info().
 */
function markdowncode_filter_info() {
	$filters = array(
		'filter_markdowncode' => array(
			'title' => t('Github-style Markdown code blocks'),
			'description' => t('Allows using Gihub style fenced code blocks with language name. 
				Note! You must add Geshi filter AFTER this filter.'),
			'prepare callback' => '_markdowncode_prepare',
			'tips callback'	=> '_markdowncode_tips',
		)
	);

	return $filters;
}

/**
 * Returns the markdown input filter tips.
 * 
 * @implements callback_filter_tips($filter, $format, $long)
 */
function _markdowncode_tips($format, $format, $long = FALSE) {
	$example = '```css
.some-class {
background: yellow;
}
```';
	$basicInfo = t('You can use fenced code blocks as in Github-style Markdown.')
		.' '.t('Example').':'
		."\n<pre>$example</pre>"
	;
	
	if ($long) {
		$renderedExample = check_markup($example, $format->format);
		//return var_export($format, true);
		return "$basicInfo\n"
			.t('Rendered example').':'
			."\n$renderedExample"
			."\n<p>".t('Note! You MUST provide language name after backticks or it will not work as expected.')
		;
	}
	else {
		return $basicInfo;
	}
}

/**
 * Removes spaces in 4-space code block.
 */
function _markdowncode_space_code_block_match_process($matches)
{
	echo $matches[0];
	return "\n<pre>".preg_replace('#([\r\n])    #', '$1', $matches[0])."</pre>";
}

/**
 * The filter.
 * 
 * @note The process is done in prepare phase because GeSHi would not pick it up otherwise.
 * 
 * @implements callback_filter_prepare($text, $filter, $format, $langcode, $cache, $cache_id)
 */
function _markdowncode_prepare($text) {
	if (!empty($text)) {
		// fenced blocks
		$text = preg_replace('#([\r\n])```([a-z]\S+)([\s\S]+?[\r\n])```#', '$1<pre language="$2">$3</pre>', $text);
		// 4-space code block
		$text = preg_replace_callback('#([\r\n]+    .+)+#', '_markdowncode_space_code_block_match_process', $text);
	}

	return $text;
}